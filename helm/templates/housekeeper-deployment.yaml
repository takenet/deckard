{{- if .Values.housekeeper.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "deckard.housekeeper.fullname" . }}
  labels:
    {{- include "deckard.housekeeper.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.housekeeper.replicaCount }}
  selector:
    matchLabels:
      {{- include "deckard.housekeeper.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.housekeeper.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "deckard.housekeeper.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.housekeeper.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}-housekeeper
          securityContext:
            {{- toYaml .Values.housekeeper.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.housekeeper.image.pullPolicy }}
          env:
            {{- if .Values.housekeeper.env }}
            {{- range $name, $item := .Values.housekeeper.env }}
            - name: {{ $name }}
              {{- $item | toYaml | nindent 14 }}
            {{- end }}
            {{- end }}
            - name: DECKARD_GRPC_PORT
              value: {{ quote .Values.housekeeper.service.port }}
            - name: DECKARD_CACHE_TYPE
              value: {{ .Values.cache.type }}
            - name: DECKARD_STORAGE_TYPE
              value: {{ .Values.storage.type }}
            - name: DECKARD_AUDIT_ENABLED
              value: {{ quote .Values.audit.enabled }}
            - name: DECKARD_HOUSEKEEPER_ENABLED
              value: "true"
            {{- if eq .Values.storage.type "MONGODB" }}
            {{- if and (.Values.mongodb.enabled) (eq .Values.mongodb.architecture "standalone") }}
            # TODO: improve storage URI handling without hardcoded port and other architectures
            - name: DECKARD_STORAGE_URI
              value: "mongodb://{{ .Values.mongodb.auth.rootUser }}:{{ .Values.mongodb.auth.rootPassword }}@{{ include "deckard.fullname" . }}-mongodb.{{ .Release.Namespace }}.svc:27017/admin?ssl=false"
            {{- else }}
            - name: DECKARD_STORAGE_URI
              value: {{ .Values.housekeeper.storage.uri | default .Values.storage.uri }}
            {{- end }}
            {{- end }}
            {{- if eq .Values.cache.type "REDIS" }}
            {{- if and (.Values.redis.enabled) (eq .Values.redis.architecture "standalone") }}
            # TODO: improve cache URI handling without hardcoded port and other architectures
            - name: DECKARD_CACHE_URI
              value: redis://:{{ .Values.redis.auth.password }}@{{ include "deckard.fullname" . }}-redis-master.{{ .Release.Namespace }}.svc:6379/{{ .Values.cache.redis.database }}
            {{- else }}
            - name: DECKARD_CACHE_URI
              value: {{ .Values.housekeeper.cache.uri | default .Values.cache.uri }}
            {{- end }}
            {{- end }}
          ports:
            - name: grpc
              containerPort: {{ .Values.housekeeper.service.port }}
              protocol: TCP
          # TODO: Improve housekeeper liveness/readiness/startup probes
          # Currently it is using the same as the Deckard gRPC service but we could disable gRPC service for the housekeeper deployment
          livenessProbe:
            grpc:
              port: {{ .Values.housekeeper.service.port }}
          readinessProbe:
            grpc:
              port: {{ .Values.housekeeper.service.port }}
          startupProbe:
            grpc:
              port: {{ .Values.housekeeper.service.port }}
            failureThreshold: 30
            periodSeconds: 2
            initialDelaySeconds: 1
            timeoutSeconds: 1
          resources:
            {{- toYaml .Values.housekeeper.resources | nindent 12 }}
      {{- with .Values.housekeeper.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.housekeeper.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.housekeeper.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}